# Default values for querent.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: querent/quester
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v0.0.3-rc9"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

node_config:
  version: 0.1

  # Unique cluster ID. This is used to identify the cluster to which this node belongs.
  cluster_id: querent-cluster
  # Node identifier. This is used to identify this node within the cluster running semantic search.
  node_id: querent-node
  listen_address: 0.0.0.0
  advertise_address: 0.0.0.0
  gossip_listen_port: 2222
  grpc_listen_port: 3333
  cpu_capacity: 5
  peer_seeds:

  # -------------------------------- Restful Configuration --------------------------------
  rest_config:
    listen_port: 1111
    cors_allow_origins:
      - "*"
    extra_headers:
      x-header-1: header-value-1
      x-header-2: header-value-2

  # -------------------------------- Storage Configuration --------------------------------
  storage_configs:
    postgres:
      name: querent_test
      storage_type: index
      config:
        url: postgres://querent:querent@postgres:5432/querent_test?sslmode=prefer
    milvus:
      name: semantic_milvus_db
      storage_type: vector
      config:
        url: http://milvus:19530
        username: ""
        password: ""
    neo4j:
      name: semantic_neo4j_db
      storage_type: graph
      config:
        db_name: neo4j
        url: bolt://neo4j:7687
        username: neo4j
        password: password_neo
  # -------------------------------- Distributed Tracing Configuration --------------------------------
  tracing:
    jaeger:
      enable_endpoint: true
      lookback_period_hours: 24
      max_trace_duration_secs: 600
      max_fetch_spans: 1000

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 2000

securityContext:
  runAsNonRoot: true
  runAsUser: 1005

# Additional global env
environment:
  {}
  # KEY: VALUE

semantics:
  replicaCount: 1

  # Extra env for semantics
  extraEnv:
    {}
    # KEY: VALUE

  resources:
    {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  ## Pod distruption budget
  podDisruptionBudget:
    {}
    # maxUnavailable: 1
    # minAvailable: 2

  updateStrategy:
    {}
    # type: RollingUpdate

  startupProbe:
    httpGet:
      path: /health/livez
      port: rest
    failureThreshold: 12
    periodSeconds: 5

  livenessProbe:
    httpGet:
      path: /health/livez
      port: rest

  readinessProbe:
    httpGet:
      path: /health/readyz
      port: rest

  nodeSelector: {}

  tolerations: []

  affinity: {}

  persistentVolume:
    enabled: false
    # storage: "1Gi"
    # storageClass: ""

service:
  type: ClusterIP

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
